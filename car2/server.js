const express = require("express");
const bodyParser = require("body-parser");
const axios = require("axios");
const path = require("path");
require("dotenv").config();

const app = express();
const PORT = process.env.PORT || 3000;


app.use(bodyParser.json());
app.use(express.static("views"));

app.set("view engine", "ejs");
app.set("views", path.join(__dirname, "views"));

// üìå Vehicle License Plates
const cars = {
    "‡∏ô‡∏á 3": { plateNumber: "‡∏ô‡∏á 3", year: 2022 },
    "9‡∏Å‡∏©1153": { plateNumber: "9‡∏Å‡∏©1153", year: 2021 },
    "5‡∏Å‡∏Å7884": { plateNumber: "5‡∏Å‡∏Å7884", year: 2023 }
};


// üìå Vehicle Inspection Checklists
const checklists = {
    "‡∏ô‡∏á 3": [
        {
            category: "1.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", details: [
                { id: "lan", name: "‡∏ä‡∏∏‡∏î LAN ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á (1) (Adapter 8)", expected: 1 },
                { id: "tv-tel", name: "‡∏ä‡∏∏‡∏î TV-TEL (Splitter)", expected: 1 },
                { id: "adt", name: "‡∏ä‡∏∏‡∏î Adapter ‡πÄ‡∏ä‡πá‡∏Ñ TV-TEL (‡∏™‡∏≥‡∏£‡∏≠‡∏á)", expected: 1 },
                { id: "rpc", name: "‡∏ä‡∏∏‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏£‡∏±‡∏ö (‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á 1 ‡∏™‡∏≤‡∏¢ 1)", expected: 1 },
                { id: "3p", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î 3 ‡πÄ‡∏ü‡∏™ (1 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)", expected: 1 },
                { id: "hvd", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡πÑ‡∏ü (1 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)", expected: 1 },
                { id: "pdmt", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î‡∏Å‡∏≤‡∏ß (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "scdv", name: "‡∏ä‡∏∏‡∏î‡πÑ‡∏Ç‡∏Ñ‡∏ß‡∏á (‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ 1 ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ 1)", expected: 1 },
                { id: "anm", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡πÅ‡∏£‡∏á‡∏•‡∏° (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "wwck", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ô‡πâ‡∏≥‡∏≠‡∏∏‡πà‡∏ô (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "glo", name: "‡∏ñ‡∏∏‡∏á‡∏°‡∏∑‡∏≠ (1 ‡∏Ñ‡∏π‡πà)", expected: 1 },
                { id: "scb", name: "‡∏™‡∏≤‡∏¢‡∏ä‡πá‡∏≠‡∏ï (1 ‡∏™‡∏≤‡∏¢)", expected: 1 },
                { id: "and", name: "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ"}// ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            ]
        },
        {
            category: "2.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏∏‡∏Ç‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•", details: [
                { id: "tank", name: "‡∏ñ‡∏±‡∏á", expected: 4 },
                { id: "cloth", name: "‡∏ú‡πâ‡∏≤", expected: 9 },
                { id: "psc", name: "‡∏î‡∏¥‡∏ô‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô", expected: 1 },
                { id: "rbt", name: "‡∏™‡∏≤‡∏¢‡∏¢‡∏≤‡∏á", expected: 3 },
                { id: "bgs", name: "‡πÄ‡∏Å‡∏ï‡∏∏", expected: 1 },
                { id: "bgs", name: "‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á", expected: 1 }
            ]
        },
        {
            category: "3.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤", details: [
                { id: "gst", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÉ‡∏´‡∏ç‡πà", expected: 1 },
                { id: "sst", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "fld", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡∏•‡∏¥‡∏á", expected: 1 },
                { id: "tch", name: "‡πÑ‡∏ü‡∏â‡∏≤‡∏¢", expected: 1 }
            ]
        },
        {
            category: "4.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", details: [
                { id: "ifc", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏≠‡∏¥‡∏ô‡∏ü‡∏≤‡πÄ‡∏£‡∏î", expected: 2 },
                { id: "mtmt", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô", expected: 1 },
                { id: "tms", name: "‡∏ï‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ï‡∏£", expected: 1 },
                { id: "msrdv", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏ù‡πâ‡∏≤", expected: 1 },
                { id: "mnmwt", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "tip", name: "‡∏ï‡∏±‡∏ß‡∏ó‡∏¥‡∏õ", expected: 1 },
                { id: "bct", name: "‡∏õ‡∏µ‡πä‡∏õ", expected: 1 },
                { id: "dmr", name: "‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏™‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ï‡∏π", expected: 1 },
                { id: "astc", name: "‡∏ù‡∏≠‡∏¢‡∏î‡∏π‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏®", expected: 1 }
            ]
        },
        {
            category: "5.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡πà‡∏≠‡∏¢", details: [
                { id: "tape", name: "‡πÄ‡∏ó‡∏õ", expected: 1 },
                { id: "asts", name: "‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", expected: 1 },
                { id: "btr", name: "‡∏ñ‡πà‡∏≤‡∏ô", expected: 1 },
                { id: "plug", name: "‡∏õ‡∏•‡∏±‡πä‡∏Å", expected: 1 },
                { id: "clc", name: "‡∏ú‡πâ‡∏≤ + ‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå", expected: 1 }
            ]
        },
        {
            category: "6.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ", details: [
                { id: "kns", name: "‡πÑ‡∏°‡πâ‡πÄ‡∏Ñ‡∏≤‡∏∞", expected: 5 },
                { id: "lle", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏¢‡∏≤‡∏ß", expected: 1 },
                { id: "shl", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏™‡∏±‡πâ‡∏ô", expected: 10 },
                { id: "brcb", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡πÉ‡∏´‡∏ç‡πà"},// ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "brcs", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "brccd", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î"},// ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "tbct", name: "‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏î‡∏ó‡πà‡∏≠", expected: 1 },
                { id: "chair", name: "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ", expected: 2 },
                { id: "pipe", name: "‡∏ó‡πà‡∏≠", expected: 1 },
                { id: "grille", name: "‡∏ï‡∏∞‡πÅ‡∏Å‡∏£‡∏á", expected: 1 },
                { id: "hmer", name: "‡∏Ñ‡πâ‡∏≠‡∏ô", expected: 2 },
                { id: "raincoat", name: "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏Å‡∏±‡∏ô‡∏ù‡∏ô", expected: 1 },
                { id: "hpsw", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏â‡∏µ‡∏î‡∏ô‡πâ‡∏≥‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á"},// ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "rope", name: "‡πÄ‡∏ä‡∏∑‡∏≠‡∏Å", expected: 1 },
                { id: "wktk", name: "‡∏ß‡∏≠", expected: 2 },
                { id: "stc", name: "‡∏™‡∏µ‡πÄ‡∏ó‡∏™‡∏£‡∏∞‡∏ö‡∏ö", expected: 1 },
                { id: "pliers", name: "‡∏Ñ‡∏µ‡∏°", expected: 1 }
            ]
        }
    ],
    "9‡∏Å‡∏©1153": [ // ‚úÖ Fixed incorrect plate number
        {
            category: "1.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", details: [
                { id: "lan", name: "‡∏ä‡∏∏‡∏î LAN ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á (1) (Adapter 8)", expected: 1 },
                { id: "tv-tel", name: "‡∏ä‡∏∏‡∏î TV-TEL (Splitter)" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "adt", name: "‡∏ä‡∏∏‡∏î Adapter ‡πÄ‡∏ä‡πá‡∏Ñ TV-TEL (‡∏™‡∏≥‡∏£‡∏≠‡∏á)", expected: 1 },
                { id: "rpc", name: "‡∏ä‡∏∏‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏£‡∏±‡∏ö (‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á 1 ‡∏™‡∏≤‡∏¢ 1)", expected: 1 },
                { id: "3p", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î 3 ‡πÄ‡∏ü‡∏™ (1 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)", expected: 1 },
                { id: "hvd", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡πÑ‡∏ü (1 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)", expected: 1 },
                { id: "pdmt", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î‡∏Å‡∏≤‡∏ß (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "scdv", name: "‡∏ä‡∏∏‡∏î‡πÑ‡∏Ç‡∏Ñ‡∏ß‡∏á (‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ 1 ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ 1)", expected: 2 },
                { id: "anm", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡πÅ‡∏£‡∏á‡∏•‡∏° (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "wwck", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ô‡πâ‡∏≥‡∏≠‡∏∏‡πà‡∏ô (1 ‡∏ä‡∏∏‡∏î)" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "glo", name: "‡∏ñ‡∏∏‡∏á‡∏°‡∏∑‡∏≠ (1 ‡∏Ñ‡∏π‡πà)", expected: 1 },
                { id: "scb", name: "‡∏™‡∏≤‡∏¢‡∏ä‡πá‡∏≠‡∏ï (1 ‡∏™‡∏≤‡∏¢)", expected: 1 },
                { id: "and", name: "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ" } // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            ]
        },
        {
            category: "2.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏∏‡∏Ç‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•", details: [
                { id: "tank", name: "‡∏ñ‡∏±‡∏á", expected: 5 },
                { id: "cloth", name: "‡∏ú‡πâ‡∏≤", expected: 10 },
                { id: "psc", name: "‡∏î‡∏¥‡∏ô‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô", expected: 1 },
                { id: "rbt", name: "‡∏™‡∏≤‡∏¢‡∏¢‡∏≤‡∏á", expected: 2 },
                { id: "bgs", name: "‡πÄ‡∏Å‡∏ï‡∏∏", expected: 1 },
                { id: "bgs", name: "‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á", expected: 1 }
            ]
        },
        {
            category: "3.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤", details: [
                { id: "gst", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÉ‡∏´‡∏ç‡πà", expected: 1 },
                { id: "sst", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "fld", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡∏•‡∏¥‡∏á", expected: 1 },
                { id: "tch", name: "‡πÑ‡∏ü‡∏â‡∏≤‡∏¢", expected: 2 }
            ]
        },
        {
            category: "4.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", details: [
                { id: "ifc", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏≠‡∏¥‡∏ô‡∏ü‡∏≤‡πÄ‡∏£‡∏î", expected: 2 },
                { id: "mtmt", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô", expected: 1 },
                { id: "tms", name: "‡∏ï‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ï‡∏£", expected: 1 },
                { id: "msrdv", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏ù‡πâ‡∏≤", expected: 1 },
                { id: "mnmwt", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "tip", name: "‡∏ï‡∏±‡∏ß‡∏ó‡∏¥‡∏õ", expected: 2 },
                { id: "bct", name: "‡∏õ‡∏µ‡πä‡∏õ", expected: 1 },
                { id: "dmr", name: "‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏™‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ï‡∏π" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "astc", name: "‡∏ù‡∏≠‡∏¢‡∏î‡∏π‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏®", expected: 1 }
            ]
        },
        {
            category: "5. ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡πà‡∏≠‡∏¢", details: [
                { id: "tape", name: "‡πÄ‡∏ó‡∏õ", expected: 1 },
                { id: "asts", name: "‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", expected: 1 },
                { id: "btr", name: "‡∏ñ‡πà‡∏≤‡∏ô", expected: 1 },
                { id: "plug", name: "‡∏õ‡∏•‡∏±‡πä‡∏Å", expected: 2 },
                { id: "clc", name: "‡∏ú‡πâ‡∏≤ + ‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå", expected: 1 }
            ]
        },
        {
            category: "6.‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ", details: [
                { id: "kns", name: "‡πÑ‡∏°‡πâ‡πÄ‡∏Ñ‡∏≤‡∏∞", expected: 4 },
                { id: "lle", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏¢‡∏≤‡∏ß", expected: 1 },
                { id: "shl", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏™‡∏±‡πâ‡∏ô", expected: 1 },
                { id: "brcb", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡πÉ‡∏´‡∏ç‡πà" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "brcs", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "brccd", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "tbct", name: "‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏î‡∏ó‡πà‡∏≠", expected: 2 },
                { id: "chair", name: "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ", expected: 1 },
                { id: "pipe", name: "‡∏ó‡πà‡∏≠", expected: 1 },
                { id: "grille", name: "‡∏ï‡∏∞‡πÅ‡∏Å‡∏£‡∏á", expected: 1 },
                { id: "hmer", name: "‡∏Ñ‡πâ‡∏≠‡∏ô", expected: 3 },
                { id: "raincoat", name: "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏Å‡∏±‡∏ô‡∏ù‡∏ô", expected: 1 },
                { id: "hpsw", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏â‡∏µ‡∏î‡∏ô‡πâ‡∏≥‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "rope", name: "‡πÄ‡∏ä‡∏∑‡∏≠‡∏Å", expected: 1 },
                { id: "wktk", name: "‡∏ß‡∏≠", expected: 2 },
                { id: "stc", name: "‡∏™‡∏µ‡πÄ‡∏ó‡∏™‡∏£‡∏∞‡∏ö‡∏ö", expected: 1 },
                { id: "pliers", name: "‡∏Ñ‡∏µ‡∏°", expected: 1 }
            ]
        }
    ],
    "5‡∏Å‡∏Å7884": [
        {
            category: "1. ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", details: [
                { id: "lan", name: "‡∏ä‡∏∏‡∏î LAN ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á (1) (Adapter 8)", expected: 10 },
                { id: "tv-tel", name: "‡∏ä‡∏∏‡∏î TV-TEL (Splitter)", expected: 5 },
                { id: "adt", name: "‡∏ä‡∏∏‡∏î Adapter ‡πÄ‡∏ä‡πá‡∏Ñ TV-TEL (‡∏™‡∏≥‡∏£‡∏≠‡∏á)", expected: 3 },
                { id: "rpc", name: "‡∏ä‡∏∏‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏£‡∏±‡∏ö (‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á 1 ‡∏™‡∏≤‡∏¢ 1)", expected: 2 },
                { id: "3p", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î 3 ‡πÄ‡∏ü‡∏™ (1 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)", expected: 1 },
                { id: "hvd", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡πÑ‡∏ü (1 ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)", expected: 1 },
                { id: "pdmt", name: "‡∏ä‡∏∏‡∏î‡∏ß‡∏±‡∏î‡∏Å‡∏≤‡∏ß (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "scdv", name: "‡∏ä‡∏∏‡∏î‡πÑ‡∏Ç‡∏Ñ‡∏ß‡∏á (‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ 1 ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ 1)", expected: 2 },
                { id: "anm", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡πÅ‡∏£‡∏á‡∏•‡∏° (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "wwck", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ô‡πâ‡∏≥‡∏≠‡∏∏‡πà‡∏ô (1 ‡∏ä‡∏∏‡∏î)", expected: 1 },
                { id: "glo", name: "‡∏ñ‡∏∏‡∏á‡∏°‡∏∑‡∏≠ (1 ‡∏Ñ‡∏π‡πà)", expected: 1 },
                { id: "scb", name: "‡∏™‡∏≤‡∏¢‡∏ä‡πá‡∏≠‡∏ï (1 ‡∏™‡∏≤‡∏¢)", expected: 1 },
                { id: "and", name: "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ" } // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            ]
        },
        {
            category: "2. ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏∏‡∏Ç‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•", details: [
                { id: "tank", name: "‡∏ñ‡∏±‡∏á", expected: 3 },
                { id: "cloth", name: "‡∏ú‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏î‡πÄ‡∏ó‡πâ‡∏≤", expected: 9 },
                { id: "psc", name: "‡∏î‡∏¥‡∏ô‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô", expected: 1 },
                { id: "rbt", name: "‡∏™‡∏≤‡∏¢‡∏¢‡∏≤‡∏á", expected: 5 },
                { id: "bgs", name: "‡πÄ‡∏Å‡∏ï‡∏∏", expected: 1 },
                { id: "bgs", name: "‡∏Ç‡∏ô‡∏°‡∏õ‡∏±‡∏á", expected: 1 }
            ]
        },
        {
            category: "3. ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤", details: [
                { id: "gst", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÉ‡∏´‡∏ç‡πà", expected: 1 },
                { id: "sst", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÄ‡∏•‡πá‡∏Å", expected: 2 },
                { id: "fld", name: "‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡∏•‡∏¥‡∏á" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "tch", name: "‡πÑ‡∏ü‡∏â‡∏≤‡∏¢", expected: 1 }
            ]
        },
        {
            category: "4. ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", details: [
                { id: "ifc", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏≠‡∏¥‡∏ô‡∏ü‡∏≤‡πÄ‡∏£‡∏î", expected: 2 },
                { id: "mtmt", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô", expected: 2 },
                { id: "tms", name: "‡∏ï‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ï‡∏£", expected: 1 },
                { id: "msrdv", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏î‡∏ù‡πâ‡∏≤", expected: 1 },
                { id: "mnmwt", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "tip", name: "‡∏ï‡∏±‡∏ß‡∏ó‡∏¥‡∏õ", expected: 1 },
                { id: "bct", name: "‡∏õ‡∏µ‡πä‡∏õ", expected: 1 },
                { id: "dmr", name: "‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏™‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ï‡∏π", expected: 1 },
                { id: "astc", name: "‡∏ù‡∏≠‡∏¢‡∏î‡∏π‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏®", expected: 1 }
            ]
        },
        {
            category: "5. ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡πà‡∏≠‡∏¢", details: [
                { id: "tape", name: "‡∏ó‡∏õ", expected: 1 },
                { id: "asts", name: "‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", expected: 1 },
                { id: "btr", name: "‡∏ñ‡πà‡∏≤‡∏ô", expected: 1 },
                { id: "plug", name: "‡∏õ‡∏•‡∏±‡πä‡∏Å", expected: 2 },
                { id: "clc", name: "‡∏ú‡πâ‡∏≤ + ‡πÅ‡∏≠‡∏•‡∏Å‡∏≠‡∏Æ‡∏≠‡∏•‡πå" } // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            ]
        },
        {
            category: "6. ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ", details: [
                { id: "kns", name: "‡πÑ‡∏°‡πâ‡πÄ‡∏Ñ‡∏≤‡∏∞", expected: 5 },
                { id: "lle", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏¢‡∏≤‡∏ß", expected: 1 },
                { id: "shl", name: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏™‡∏±‡πâ‡∏ô", expected: 1 },
                { id: "brcb", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡πÉ‡∏´‡∏ç‡πà" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "brcs", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡πÄ‡∏•‡πá‡∏Å", expected: 1 },
                { id: "brccd", name: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏á‡∏π‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î" }, // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                { id: "tbct", name: "‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏î‡∏ó‡πà‡∏≠", expected: 1 },
                { id: "chair", name: "‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ", expected: 2 },
                { id: "pipe", name: "‡∏ó‡πà‡∏≠", expected: 1 },
                { id: "grille", name: "‡∏ï‡∏∞‡πÅ‡∏Å‡∏£‡∏á", expected: 1 },
                { id: "hmer", name: "‡∏Ñ‡πâ‡∏≠‡∏ô", expected: 1 },
                { id: "raincoat", name: "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏Å‡∏±‡∏ô‡∏ù‡∏ô", expected: 1 },
                { id: "hpsw", name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏â‡∏µ‡∏î‡∏ô‡πâ‡∏≥‡πÅ‡∏£‡∏á‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á", expected: 1 },
                { id: "rope", name: "‡πÄ‡∏ä‡∏∑‡∏≠‡∏Å", expected: 1 },
                { id: "wktk", name: "‡∏ß‡∏≠", expected: 2 },
                { id: "stc", name: "‡∏™‡∏µ‡πÄ‡∏ó‡∏™‡∏£‡∏∞‡∏ö‡∏ö", expected: 1 },
                { id: "pliers", name: "‡∏Ñ‡∏µ‡∏°", expected: 1 }
            ]
        }
    ]
};
// üìå Render Home Page
app.get("/", (req, res) => {
    res.render("index", { cars });
});

// üìå Fetch Checklist Based on License Plate
app.get("/get-checklist-form/:plateNumber", (req, res) => {
    const checklist = checklists[req.params.plateNumber];
    if (!checklist) {
        return res.status(404).json({ error: "Checklist not found" });
    }
    res.json({ plateNumber: req.params.plateNumber, checklist });
});

// üìå Send Checklist to LINE
app.post("/submit-checklist", async (req, res) => {
    try {
        console.log("üìå Received Data from Frontend:", req.body);

        const { inspector, plateNumber, equipment } = req.body;
        if (!inspector || !plateNumber || !equipment) {
            throw new Error("Incomplete data received!");
        }

        if (!checklists[plateNumber]) {
            throw new Error("No checklist found for this plate number!");
        }

        // ‚úÖ Check if any quantity exceeds the expected limit
        let errorMessages = [];
        equipment.forEach(item => {
            let category = checklists[plateNumber].find(c => c.details.some(d => d.id === item.name));
            if (category) {
                let equipmentData = category.details.find(d => d.id === item.name);
                if (!equipmentData) return;

                let expectedQty = equipmentData.expected || 0;
                let quantity = item.quantity;

                if (expectedQty > 0 && quantity > expectedQty) {
                    errorMessages.push(`‚ö†Ô∏è ${equipmentData.name} ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏™‡πà‡πÄ‡∏Å‡∏¥‡∏ô ${expectedQty} ‡∏ä‡∏¥‡πâ‡∏ô`);
                }
            }
        });

        if (errorMessages.length > 0) {
            return res.status(400).json({ error: errorMessages.join("\n") });
        }

        // ‚úÖ Construct the checklist message
        let message = `üìã Checklist ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏î‡∏¢: ${inspector}\n`;
        message += `üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date().toLocaleDateString("th-TH", {
            year: "numeric", month: "long", day: "numeric"
        })} ${new Date().toLocaleTimeString("th-TH", {
            hour: "2-digit", minute: "2-digit", second: "2-digit"
        })}\n`;
        message += `üöó ‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: ${plateNumber}\n\n`;

        // ‚úÖ Organizing equipment by category
        let categories = {};
        equipment.forEach(item => {
            let category = checklists[plateNumber].find(c => c.details.some(d => d.id === item.name));
            if (category) {
                if (!categories[category.category]) {
                    categories[category.category] = [];
                }

                let equipmentData = category.details.find(d => d.id === item.name);
                if (!equipmentData) return;

                let expectedQty = equipmentData.expected || 0;
                let quantity = item.quantity;
                let remark = item.remark ? ` ${item.remark}` : "";
                let statusText = "‡πÑ‡∏°‡πà‡∏°‡∏µ";

                if (quantity > 0) {
                    statusText = `‡∏°‡∏µ ${quantity}`;
                    if (expectedQty > 0) {
                        if (quantity === expectedQty) {
                            statusText += " ‡∏Ñ‡∏£‡∏ö";
                        } else if (quantity < expectedQty) {
                            statusText += ` ‡∏Ç‡∏≤‡∏î ${expectedQty - quantity}`;
                        }
                    }
                }

                categories[category.category].push(`- ${equipmentData.name} ${statusText}${remark}`);
            }
        });

        // ‚úÖ Formatting output with a blank line after each category
        Object.entries(categories).forEach(([category, items]) => {
            message += `${category}\n${items.join("\n")}\n\n`;  // <<<<< Added a blank line at the end
        });

        // ‚úÖ Sending message to LINE
        await axios.post(
            "https://api.line.me/v2/bot/message/push",
            {
                to: process.env.LINE_USER_ID,
                messages: [{ type: "text", text: message }],
            },
            {
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${process.env.LINE_ACCESS_TOKEN}`,
                },
            }
        );

        console.log("‚úÖ LINE Message Sent Successfully:", message);
        res.status(200).json({ success: true, message: "Checklist sent to LINE!" });
    } catch (error) {
        console.error("‚ùå Failed to Send:", error.response?.data || error.message);
        res.status(500).json({ error: "Failed to send checklist" });
    }
});

app.listen(PORT, () => {
    console.log(`üöÄ Server is running on http://localhost:${PORT}`);
});